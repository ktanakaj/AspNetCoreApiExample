version: '3.4'

services:
  exampleapp:
    build:
      context: .
      dockerfile: AspNetCoreApiExample/Dockerfile
    container_name: exampleapp-container
    environment:
      ASPNETCORE_URLS: http://+:5000
    depends_on:
      - exampledb
      - examplefluentd
    logging:
      driver: "fluentd"
      options:
        tag: "docker.app"
        fluentd-async-connect: "true"
    restart: always
  examplemigration:
    build:
      context: .
      dockerfile: ./Docker/migration/Dockerfile
    container_name: examplemigration-container
    depends_on:
      - exampledb
      - examplefluentd
    entrypoint: wait-for-it exampledb:3306 -- /src/Docker/migration/migration.sh
    logging:
      driver: "fluentd"
      options:
        tag: "docker.migration"
        fluentd-async-connect: "true"
  examplenginx:
    build:
      context: .
      dockerfile: ./Docker/nginx/Dockerfile
    container_name: examplenginx-container
    environment:
      NGINX_PORT: 80
      BACKEND_SERVER: exampleapp:5000
    depends_on:
      - exampleapp
      - examplefluentd
    logging:
      driver: "fluentd"
      options:
        tag: "docker.nginx"
        fluentd-async-connect: "true"
    restart: always
  exampledb:
    image: mysql:8
    container_name: exampledb-container
    environment:
      MYSQL_ROOT_PASSWORD: root001
      MYSQL_DATABASE: blog_db
      MYSQL_USER: blog_usr
      MYSQL_PASSWORD: blog001
    volumes:
      - ./Docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - example-mysql:/var/lib/mysql
    depends_on:
      - examplefluentd
    logging:
      driver: "fluentd"
      options:
        tag: "docker.mysql"
        fluentd-async-connect: "true"
    restart: always
  examplefluentd:
    container_name: examplefluentd-container
    build:
      context: .
      dockerfile: ./Docker/fluentd/Dockerfile
    restart: always
volumes:
  example-mysql:
